// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/anyproto/any-sync-node/nodestorage (interfaces: NodeStorage)
//
// Generated by this command:
//
//	mockgen -destination mock_nodestorage/mock_nodestorage.go github.com/anyproto/any-sync-node/nodestorage NodeStorage
//

// Package mock_nodestorage is a generated GoMock package.
package mock_nodestorage

import (
	context "context"
	reflect "reflect"

	nodestorage "github.com/anyproto/any-sync-node/nodestorage"
	app "github.com/anyproto/any-sync/app"
	spacestorage "github.com/anyproto/any-sync/commonspace/spacestorage"
	gomock "go.uber.org/mock/gomock"
)

// MockNodeStorage is a mock of NodeStorage interface.
type MockNodeStorage struct {
	ctrl     *gomock.Controller
	recorder *MockNodeStorageMockRecorder
}

// MockNodeStorageMockRecorder is the mock recorder for MockNodeStorage.
type MockNodeStorageMockRecorder struct {
	mock *MockNodeStorage
}

// NewMockNodeStorage creates a new mock instance.
func NewMockNodeStorage(ctrl *gomock.Controller) *MockNodeStorage {
	mock := &MockNodeStorage{ctrl: ctrl}
	mock.recorder = &MockNodeStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNodeStorage) EXPECT() *MockNodeStorageMockRecorder {
	return m.recorder
}

// AllSpaceIds mocks base method.
func (m *MockNodeStorage) AllSpaceIds() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllSpaceIds")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllSpaceIds indicates an expected call of AllSpaceIds.
func (mr *MockNodeStorageMockRecorder) AllSpaceIds() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllSpaceIds", reflect.TypeOf((*MockNodeStorage)(nil).AllSpaceIds))
}

// CreateSpaceStorage mocks base method.
func (m *MockNodeStorage) CreateSpaceStorage(arg0 spacestorage.SpaceStorageCreatePayload) (spacestorage.SpaceStorage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSpaceStorage", arg0)
	ret0, _ := ret[0].(spacestorage.SpaceStorage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSpaceStorage indicates an expected call of CreateSpaceStorage.
func (mr *MockNodeStorageMockRecorder) CreateSpaceStorage(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSpaceStorage", reflect.TypeOf((*MockNodeStorage)(nil).CreateSpaceStorage), arg0)
}

// DeleteSpaceStorage mocks base method.
func (m *MockNodeStorage) DeleteSpaceStorage(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteSpaceStorage", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteSpaceStorage indicates an expected call of DeleteSpaceStorage.
func (mr *MockNodeStorageMockRecorder) DeleteSpaceStorage(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSpaceStorage", reflect.TypeOf((*MockNodeStorage)(nil).DeleteSpaceStorage), arg0, arg1)
}

// DeletionStorage mocks base method.
func (m *MockNodeStorage) DeletionStorage() nodestorage.DeletionStorage {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletionStorage")
	ret0, _ := ret[0].(nodestorage.DeletionStorage)
	return ret0
}

// DeletionStorage indicates an expected call of DeletionStorage.
func (mr *MockNodeStorageMockRecorder) DeletionStorage() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletionStorage", reflect.TypeOf((*MockNodeStorage)(nil).DeletionStorage))
}

// Init mocks base method.
func (m *MockNodeStorage) Init(arg0 *app.App) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init.
func (mr *MockNodeStorageMockRecorder) Init(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockNodeStorage)(nil).Init), arg0)
}

// Name mocks base method.
func (m *MockNodeStorage) Name() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Name")
	ret0, _ := ret[0].(string)
	return ret0
}

// Name indicates an expected call of Name.
func (mr *MockNodeStorageMockRecorder) Name() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Name", reflect.TypeOf((*MockNodeStorage)(nil).Name))
}

// OnDeleteStorage mocks base method.
func (m *MockNodeStorage) OnDeleteStorage(arg0 func(context.Context, string)) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OnDeleteStorage", arg0)
}

// OnDeleteStorage indicates an expected call of OnDeleteStorage.
func (mr *MockNodeStorageMockRecorder) OnDeleteStorage(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnDeleteStorage", reflect.TypeOf((*MockNodeStorage)(nil).OnDeleteStorage), arg0)
}

// OnWriteHash mocks base method.
func (m *MockNodeStorage) OnWriteHash(arg0 func(context.Context, string, string)) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "OnWriteHash", arg0)
}

// OnWriteHash indicates an expected call of OnWriteHash.
func (mr *MockNodeStorageMockRecorder) OnWriteHash(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OnWriteHash", reflect.TypeOf((*MockNodeStorage)(nil).OnWriteHash), arg0)
}

// SpaceExists mocks base method.
func (m *MockNodeStorage) SpaceExists(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SpaceExists", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// SpaceExists indicates an expected call of SpaceExists.
func (mr *MockNodeStorageMockRecorder) SpaceExists(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SpaceExists", reflect.TypeOf((*MockNodeStorage)(nil).SpaceExists), arg0)
}

// SpaceStorage mocks base method.
func (m *MockNodeStorage) SpaceStorage(arg0 string) (spacestorage.SpaceStorage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SpaceStorage", arg0)
	ret0, _ := ret[0].(spacestorage.SpaceStorage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SpaceStorage indicates an expected call of SpaceStorage.
func (mr *MockNodeStorageMockRecorder) SpaceStorage(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SpaceStorage", reflect.TypeOf((*MockNodeStorage)(nil).SpaceStorage), arg0)
}

// StoreDir mocks base method.
func (m *MockNodeStorage) StoreDir(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StoreDir", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// StoreDir indicates an expected call of StoreDir.
func (mr *MockNodeStorageMockRecorder) StoreDir(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StoreDir", reflect.TypeOf((*MockNodeStorage)(nil).StoreDir), arg0)
}

// TryLockAndDo mocks base method.
func (m *MockNodeStorage) TryLockAndDo(arg0 string, arg1 func() error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TryLockAndDo", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// TryLockAndDo indicates an expected call of TryLockAndDo.
func (mr *MockNodeStorageMockRecorder) TryLockAndDo(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TryLockAndDo", reflect.TypeOf((*MockNodeStorage)(nil).TryLockAndDo), arg0, arg1)
}

// WaitSpaceStorage mocks base method.
func (m *MockNodeStorage) WaitSpaceStorage(arg0 context.Context, arg1 string) (spacestorage.SpaceStorage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WaitSpaceStorage", arg0, arg1)
	ret0, _ := ret[0].(spacestorage.SpaceStorage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// WaitSpaceStorage indicates an expected call of WaitSpaceStorage.
func (mr *MockNodeStorageMockRecorder) WaitSpaceStorage(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WaitSpaceStorage", reflect.TypeOf((*MockNodeStorage)(nil).WaitSpaceStorage), arg0, arg1)
}
